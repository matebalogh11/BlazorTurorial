@inject IFileReaderService fileReaderService
@using Blazor.FileReader
@using System.IO

<div class="form-group">
	<label>@Label</label>
	<input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png" class="form-control-file"/>
</div>
<div>
	@if (imageBase64 != null)
	{
		<div>
			<div style="margin:10px">
				<img src="data:image/jpeg;base64,@imageBase64" style="width:400px" />
			</div>
		</div>
	}
	else if (ImageUrl != null)
	{
		<div>
			<div style="margin:10px">
				<img src="@ImageUrl" style="width:400px" />
			</div>
		</div>
	}
</div>

@code {

	[Parameter]
	public string Label { get; set; } = "Image";

	[Parameter]
	public string ImageUrl { get; set; }

	[Parameter]
	public EventCallback<string> SelectedImage { get; set; }

	private string imageBase64;

	ElementReference inputElement;

	async Task ImageFileSelected()
	{
		foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
		{
			using (MemoryStream mstream = await file.CreateMemoryStreamAsync(4 * 1024))
			{
				var imageBytes = new byte[mstream.Length];
				mstream.Read(imageBytes, 0, (int)mstream.Length);
				imageBase64 = Convert.ToBase64String(imageBytes);
				await SelectedImage.InvokeAsync(imageBase64);
				StateHasChanged();
			}
		}
	}
}
