<EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
	<DataAnnotationsValidator />
	<div class="form-group">
		<label>Title:</label>
		<div>
			<InputText class="form-control" @bind-Value="Movie.Title" />
			<ValidationMessage For="@(() => Movie.Title)" />
		</div>
	</div>
	<div class="form-group">
		<label>In Theaters</label>
		<div>
			<InputCheckbox class="form-check" @bind-Value="Movie.InTheaters" />
			<ValidationMessage For="@(() => Movie.InTheaters)" />
		</div>
	</div>
	<div class="form-group">
		<label>Trailer</label>
		<div>
			<InputText class="form-control" @bind-Value="Movie.Trailer" />
			<ValidationMessage For="@(() => Movie.Trailer)" />
		</div>
	</div>
	<div class="form-group">
		<label>Release date:</label>
		<div>
			<InputDate class="form-control" @bind-Value="Movie.RelaseDate" />
			<ValidationMessage For="@(() => Movie.RelaseDate)" />
		</div>
	</div>
	<div class="form-group">
		<InputImage Label="Poster" SelectedImage="PosterSelected" ImageUrl="@imgUrl" />
	</div>

	<div class="form-group form-markdown">
		<InputMarkdown @bind-Value="Movie.Summary" Label="Summary" For="@(() => Movie.Summary)" />
	</div>

	<div class="form-group">
		<label>Genres:</label>
		<MultipleSelector Selected="selected" NotSelected="notSelected"/>
	</div>

	<button class="btn btn-primary" type="submit">Save changes</button>
</EditForm>

@code {

	[Parameter]
	public Movie Movie { get; set; }

	[Parameter]
	public EventCallback OnValidSubmit { get; set; }

	[Parameter]
	public List<Genre> NotSelectedGenres { get; set; } = new List<Genre>();

	[Parameter]
	public List<Genre> SelectedGenres { get; set; } = new List<Genre>();


	private List<MultipleSelectorModel> selected;
	private List<MultipleSelectorModel> notSelected;

	private string imgUrl;

	protected override void OnInitialized()
	{
		selected = SelectedGenres.Select(g => new MultipleSelectorModel(g.Id, g.Name)).ToList();
		notSelected = NotSelectedGenres.Select(g => new MultipleSelectorModel(g.Id, g.Name)).ToList();

		if (!string.IsNullOrEmpty(Movie.Poster))
		{
			imgUrl = Movie.Poster;
			Movie.Poster = null;
		}

		base.OnInitialized();
	}

	private void PosterSelected(string img)
	{
		Movie.Poster = img;
		imgUrl = null;
	}
}
